{"version":3,"sources":["src/furry.ts","src/coin.ts","src/Game.ts","src/index.ts"],"names":[],"mappings":"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","file":"src.71b856c1.js","sourceRoot":"..","sourcesContent":["class Furry {\n  public x: number = 0\n  public y: number = 0\n  private direction: string = 'right'\n  public speed: number = 250\n\n  public get isFurryOutOfMap(): boolean {\n    return this.x < 0 || this.x > 9 || this.y < 0 || this.y > 9\n  }\n\n  public updateFurryDirection(which: number): void {\n    switch (which) {\n      case 37:\n        this.direction = 'left'\n        break\n      case 38:\n        this.direction = 'down'\n        break\n      case 39:\n        this.direction = 'right'\n        break\n      case 40:\n        this.direction = 'top'\n      default:\n        break\n    }\n  }\n\n  public updateFurryPosition(): void {\n    const { direction, x, y } = this\n    switch (direction) {\n      case 'right':\n        this.x = x + 1\n        break\n      case 'left':\n        this.x = x - 1\n        break\n      case 'top':\n        this.y = y + 1\n        break\n      case 'down':\n        this.y = y - 1\n        break\n      default:\n        break\n    }\n  }\n\n  public resetFurry(): void {\n    this.x = 0\n    this.y = 0\n    this.direction = 'right'\n    this.speed = 250\n  }\n}\n\nexport default Furry\n","class Coin {\n  public x: number = ~~(Math.random() * 10)\n  public y: number = ~~(Math.random() * 10)\n}\n\nexport default Coin\n","import Furry from './furry'\nimport Coin from './coin'\n\nclass Game {\n  static board = document.querySelectorAll<HTMLElement>('.board div')\n  static section = <HTMLElement>document.querySelector('.board')\n  static over = <HTMLElement>document.querySelector('.over')\n  static tablePoints = <HTMLElement>document.querySelector('.score')\n\n  private interval: number | undefined\n  private furry: Furry = new Furry()\n  private coin: Coin = new Coin()\n  private score: number = 0\n\n  public startGame(): void {\n    this.interval = setInterval((): void => {\n      this.moveFurry()\n    }, this.furry.speed)\n  }\n\n  private getIndex(x: number, y: number): number {\n    return x + y * 10\n  }\n\n  public showFurry(): void {\n    const {\n      furry: { x = 0, y = 0 },\n    } = this\n    this.hideVisibleFurry()\n    Game.board[this.getIndex(x, y)].classList.add('furry')\n  }\n\n  public turnFurry = (which: number): void => {\n    this.furry.updateFurryDirection(which)\n  }\n\n  public showCoin(): void {\n    Game.board[this.getIndex(this.coin.x, this.coin.y)].classList.add('coin')\n  }\n\n  private hideVisibleFurry(): void {\n    var divs = document.querySelector('.furry')\n    if (divs !== null) {\n      divs.classList.remove('furry')\n    }\n  }\n\n  private moveFurry(): void {\n    this.furry.updateFurryPosition()\n    const z = this.furry.isFurryOutOfMap\n    if (this.furry.isFurryOutOfMap) {\n      this.gameOver()\n    } else {\n      this.checkCoinCollision()\n      this.showFurry()\n    }\n  }\n\n  private updateDisplayedPoints(): void {\n    const points: NodeListOf<HTMLElement> = document.querySelectorAll('.points')\n    points[0].innerText = this.score.toString()\n    points[1].innerText = this.score.toString()\n  }\n\n  private checkCoinCollision(): void {\n    if (this.furry.x === this.coin.x && this.furry.y === this.coin.y) {\n      this.score = this.score + 1\n      const hideCoin = <HTMLElement>document.querySelector('.coin')\n      hideCoin.classList.remove('coin')\n      this.coin = new Coin()\n      this.showCoin()\n      this.updateDisplayedPoints()\n      clearInterval(this.interval)\n      this.furry.speed = this.furry.speed * 0.95\n      this.startGame()\n    }\n  }\n\n  private gameOver(): void {\n    clearInterval(this.interval)\n    this.hideVisibleFurry()\n    Game.tablePoints.classList.add('invisible')\n    Game.section.classList.add('invisible')\n    Game.over.classList.remove('invisible')\n  }\n\n  public playAgain(): void {\n    Game.tablePoints.classList.remove('invisible')\n    Game.section.classList.remove('invisible')\n    Game.over.classList.add('invisible')\n    this.score = 0\n    this.updateDisplayedPoints()\n    this.furry.resetFurry()\n    this.showFurry()\n    this.showCoin()\n    this.startGame()\n  }\n}\n\nexport default Game\n","import Game from './Game'\n\nconst game: Game = new Game()\ngame.showFurry()\ngame.showCoin()\ngame.startGame()\n\ndocument.addEventListener(\n  'keydown',\n  (event): void => {\n    game.turnFurry(event.which)\n  },\n)\n\nconst againButton = <HTMLElement>document.querySelector('.btn-again')\nagainButton.addEventListener('click', (): void => game.playAgain())\n"]}